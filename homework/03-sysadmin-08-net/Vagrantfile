# -*- mode: ruby -*-
# vi: set ft=ruby :

boxes = {
  'netology1' => '10',
  'netology2' => '60'
}

ipvs = {
  'netology-ipvs1' => '131',
  'netology-ipvs2' => '121'
}

Vagrant.configure("2") do |config|
  config.vm.network "private_network", virtualbox__intnet: true, auto_config: false
  config.vm.box = "bento/ubuntu-20.04"

  boxes.each do |k, v|
    config.vm.define k do |node|
      node.vm.provider :virtualbox do |vb|
          vb.memory = 512
      end    
      node.vm.provision "shell" do |s|
        s.inline = "hostname $1;"\
          "ip addr add $2 dev eth1;"\
          "ip link set dev eth1 up;"\
          "apt update;"\
          "apt -y install nginx;"\
          "ip addr add 172.28.128.100/32 dev lo label lo:100;"\
          "echo net.ipv4.conf.all.arp_ignore=1 >> /etc/sysctl.conf;"\
          "echo net.ipv4.conf.all.arp_announce=2 >> /etc/sysctl.conf;"\
          "sysctl -p;"\
          "echo Server $1 > /var/www/html/index.nginx-debian.html;"
        s.args = [k, "172.28.128.#{v}/24"]
      end
    end
  end
  ipvs.each do |m, w|
    config.vm.define m do |node_ipvs|
      node_ipvs.vm.provider :virtualbox do |vb|
          vb.memory = 512
      end   
      node_ipvs.vm.provision "file", source: "./#{m}_keepalived.conf", destination: "/home/vagrant/keepalived.conf;"
      node_ipvs.vm.provision "shell" do |s|
        s.inline = "hostname $1;"\
            "ip addr add $2 dev eth1;"\
            "ip link set dev eth1 up;"\
            "apt update;"\
            "apt -y install ipvsadm keepalived;"\
            "mv /home/vagrant/keepalived.conf /etc/keepalived/keepalived.conf;"\
            "echo net.ipv4.conf.all.arp_ignore=1 >> /etc/sysctl.conf;"\
            "echo net.ipv4.conf.all.arp_announce=2 >> /etc/sysctl.conf;"\
            "sysctl -p;"\
            "iptables -A INPUT -i eth1 -d 224.0.0.0/8 -j ACCEPT;"\
            "iptables -A INPUT -p vrrp -i eth1 -j ACCEPT;"\
            "systemctl enable --now keepalived;"
        s.args = [m, "172.28.128.#{w}/24"]
      end
    end
  end
  config.vm.define "client" do |client|
      client.vm.provider :virtualbox do |vb|
        vb.memory = 512
      end 
      client.vm.provision "file", source: "./check.sh", destination: "/home/vagrant/check.sh;"
      client.vm.provision "shell" do |s|
        s.inline = "hostname netology-client;"\
          "ip addr add 172.28.128.220/24 dev eth1;"\
          "ip link set dev eth1 up;"
      end
  end
end
